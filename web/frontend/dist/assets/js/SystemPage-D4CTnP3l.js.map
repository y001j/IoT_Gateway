{"version":3,"file":"SystemPage-D4CTnP3l.js","sources":["../../../src/services/systemService.ts","../../../src/pages/SystemPage.tsx"],"sourcesContent":["import api from './api';\nimport type {\n  SystemStatus,\n  SystemMetrics,\n  HealthCheck,\n  SystemConfig,\n  ConfigValidationResponse\n} from '../types/system';\n\nexport const systemService = {\n  // 获取系统状态\n  async getStatus(): Promise<SystemStatus> {\n    const response = await api.get('/system/status');\n    return response.data.data;\n  },\n\n  // 获取系统指标\n  async getMetrics(): Promise<SystemMetrics> {\n    const response = await api.get('/system/metrics');\n    return response.data.data;\n  },\n\n  // 获取健康检查\n  async getHealth(): Promise<HealthCheck> {\n    const response = await api.get('/system/health');\n    return response.data.data;\n  },\n\n  // 获取系统配置\n  async getConfig(): Promise<SystemConfig> {\n    const response = await api.get('/system/config');\n    return response.data.data;\n  },\n\n  // 更新系统配置\n  async updateConfig(config: SystemConfig): Promise<void> {\n    await api.put('/system/config', config);\n  },\n\n  // 验证配置\n  async validateConfig(config: SystemConfig): Promise<ConfigValidationResponse> {\n    const response = await api.post('/system/config/validate', config);\n    return response.data.data;\n  },\n\n  // 重启系统\n  async restart(delay?: number): Promise<void> {\n    await api.post('/system/restart', { delay: delay || 0 });\n  }\n};","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Typography,\r\n  message,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Modal,\r\n  Tag,\r\n  Space,\r\n  Tabs\r\n} from 'antd';\r\nimport {\r\n  ReloadOutlined,\r\n  SettingOutlined,\r\n  SaveOutlined\r\n} from '@ant-design/icons';\r\nimport { systemService } from '../services/systemService';\r\nimport type {\r\n  SystemStatus,\r\n  SystemMetrics,\r\n} from '../types/system';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst SystemPage: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [systemStatus, setSystemStatus] = useState<SystemStatus | null>(null);\r\n  const [systemMetrics, setSystemMetrics] = useState<SystemMetrics | null>(null);\r\n  // 移除未使用的状态变量\r\n  const [configForm] = Form.useForm();\r\n  const [activeTab, setActiveTab] = useState('status');\r\n\r\n  // 获取系统状态\r\n  const fetchSystemStatus = async () => {\r\n    try {\r\n      const status = await systemService.getStatus();\r\n      setSystemStatus(status);\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n      message.error('获取系统状态失败：' + errorMessage);\r\n    }\r\n  };\r\n\r\n  // 获取系统指标\r\n  const fetchSystemMetrics = async () => {\r\n    try {\r\n      const metrics = await systemService.getMetrics();\r\n      setSystemMetrics(metrics);\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n      message.error('获取系统指标失败：' + errorMessage);\r\n    }\r\n  };\r\n\r\n  // 获取健康检查\r\n  const fetchHealthCheck = async () => {\r\n    try {\r\n      const health = await systemService.getHealth();\r\n      // 健康检查数据获取成功，但暂时不使用\r\n      console.log('健康检查数据:', health);\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n      message.error('获取健康检查失败：' + errorMessage);\r\n    }\r\n  };\r\n\r\n  // 获取系统配置\r\n  const fetchSystemConfig = async () => {\r\n    try {\r\n      const config = await systemService.getConfig();\r\n      // 系统配置获取成功\r\n      configForm.setFieldsValue(config);\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n      message.error('获取系统配置失败：' + errorMessage);\r\n    }\r\n  };\r\n\r\n  // 刷新所有数据\r\n  const refreshAll = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await Promise.all([\r\n        fetchSystemStatus(),\r\n        fetchSystemMetrics(),\r\n        fetchHealthCheck(),\r\n        fetchSystemConfig()\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 保存配置\r\n  const handleSaveConfig = async () => {\r\n    try {\r\n      const values = await configForm.validateFields();\r\n      await systemService.updateConfig(values);\r\n      message.success('配置保存成功');\r\n      await fetchSystemConfig();\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n      message.error('保存配置失败：' + errorMessage);\r\n    }\r\n  };\r\n\r\n  // 重启系统\r\n  const handleRestart = () => {\r\n    Modal.confirm({\r\n      title: '确认重启系统',\r\n      content: '重启系统将会中断所有正在运行的连接和任务，确定要继续吗？',\r\n      okText: '确认重启',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        try {\r\n          await systemService.restart();\r\n          message.success('系统重启中...');\r\n        } catch (error: unknown) {\r\n          const errorMessage = error instanceof Error ? error.message : '未知错误';\r\n          message.error('重启失败：' + errorMessage);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  // 格式化运行时间\r\n  const formatUptime = (seconds: number) => {\r\n    const days = Math.floor(seconds / 86400);\r\n    const hours = Math.floor((seconds % 86400) / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    return `${days}天 ${hours}小时 ${minutes}分钟`;\r\n  };\r\n\r\n  // 格式化文件大小\r\n  const formatFileSize = (bytes: number) => {\r\n    const units = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n    let size = bytes;\r\n    let unitIndex = 0;\r\n    while (size >= 1024 && unitIndex < units.length - 1) {\r\n      size /= 1024;\r\n      unitIndex++;\r\n    }\r\n    return `${size.toFixed(2)} ${units[unitIndex]}`;\r\n  };\r\n\r\n  // 获取状态颜色\r\n  const getStatusColor = (status: string): 'success' | 'warning' | 'error' | 'default' => {\r\n    switch (status.toLowerCase()) {\r\n      case 'running':\r\n      case 'healthy':\r\n      case 'connected':\r\n        return 'success';\r\n      case 'warning':\r\n      case 'degraded':\r\n        return 'warning';\r\n      case 'error':\r\n      case 'failed':\r\n      case 'disconnected':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshAll();\r\n  }, []);\r\n\r\n  const tabItems = [\r\n    {\r\n      key: 'status',\r\n      label: '系统状态',\r\n      children: (\r\n        <div>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={12}>\r\n              <Card title=\"基本信息\" size=\"small\">\r\n                {systemStatus && (\r\n                  <div>\r\n                    <p><strong>状态:</strong> <Tag color={getStatusColor(systemStatus.status)}>{systemStatus.status}</Tag></p>\r\n                    <p><strong>版本:</strong> {systemStatus.version}</p>\r\n                    <p><strong>运行时间:</strong> {formatUptime(systemStatus.uptime)}</p>\r\n                    <p><strong>Go版本:</strong> {systemStatus.go_version}</p>\r\n                  </div>\r\n                )}\r\n              </Card>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Card title=\"资源使用\" size=\"small\">\r\n                {systemMetrics && (\r\n                  <div>\r\n                    <p><strong>CPU:</strong> {systemMetrics.cpu_percent.toFixed(1)}%</p>\r\n                    <p><strong>内存:</strong> {formatFileSize(systemMetrics.memory_used)} / {formatFileSize(systemMetrics.memory_total)}</p>\r\n                    <p><strong>磁盘:</strong> {formatFileSize(systemMetrics.disk_used)} / {formatFileSize(systemMetrics.disk_total)}</p>\r\n                  </div>\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'config',\r\n      label: '系统配置',\r\n      children: (\r\n        <Card title=\"配置管理\" extra={\r\n          <Button type=\"primary\" icon={<SaveOutlined />} onClick={handleSaveConfig}>\r\n            保存配置\r\n          </Button>\r\n        }>\r\n          <Form form={configForm} layout=\"vertical\">\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"网关ID\" name={['gateway', 'id']}>\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"HTTP端口\" name={['gateway', 'http_port']}>\r\n                  <InputNumber min={1} max={65535} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Title level={2}>系统管理</Title>\r\n        <Space>\r\n          <Button icon={<ReloadOutlined />} onClick={refreshAll} loading={loading}>\r\n            刷新\r\n          </Button>\r\n          <Button danger icon={<SettingOutlined />} onClick={handleRestart}>\r\n            重启系统\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n\r\n      <Tabs\r\n        activeKey={activeTab}\r\n        onChange={setActiveTab}\r\n        items={tabItems}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemPage; "],"names":["systemService","async","api","get","data","updateConfig","config","put","post","restart","delay","Title","Typography","SystemPage","loading","setLoading","useState","systemStatus","setSystemStatus","systemMetrics","setSystemMetrics","configForm","Form","useForm","activeTab","setActiveTab","fetchSystemStatus","status","getStatus","error","errorMessage","Error","message","fetchSystemMetrics","metrics","getMetrics","fetchHealthCheck","health","getHealth","console","log","fetchSystemConfig","getConfig","setFieldsValue","refreshAll","Promise","all","formatFileSize","bytes","units","size","unitIndex","length","toFixed","useEffect","tabItems","key","label","children","jsxs","Row","gutter","jsx","Col","span","Card","title","Tag","color","toLowerCase","getStatusColor","version","seconds","uptime","Math","floor","go_version","cpu_percent","memory_used","memory_total","disk_used","disk_total","extra","Button","type","icon","SaveOutlined","onClick","values","validateFields","success","form","layout","Item","name","Input","InputNumber","min","max","style","padding","marginBottom","display","justifyContent","alignItems","level","Space","ReloadOutlined","danger","SettingOutlined","Modal","confirm","content","okText","okType","cancelText","onOk","Tabs","activeKey","onChange","items"],"mappings":"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"}