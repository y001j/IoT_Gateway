{"version":3,"mappings":"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","names":["useAuthStore","create","persist","set","get","accessToken","refreshToken","user","isAuthenticated","setTokens","setUser","logout","initialize","name","storage","createJSONStorage","localStorage","ProtectedRoute","children","jsx","Outlet","Navigate","to","replace","api","axios","baseURL","headers","interceptors","request","use","config","getState","console","log","url","substring","Authorization","error","Promise","reject","isRefreshing","failedQueue","processQueue","token","forEach","prom","resolve","response","async","originalRequest","status","_retry","push","then","catch","err","data","post","newAccessToken","newRefreshToken","defaults","common","refreshError","Error","String","authService","login","credentials","refresh_token","getProfile","updateProfile","payload","put","Header","Content","Sider","Layout","MainLayout","collapsed","setCollapsed","useState","location","useLocation","sideMenuItems","key","icon","DashboardOutlined","label","Link","DeploymentUnitOutlined","ApartmentOutlined","AlertOutlined","MonitorOutlined","SettingOutlined","topMenuItems","LogoutOutlined","onClick","style","minHeight","jsxs","collapsible","onCollapse","width","className","height","margin","background","borderRadius","Menu","theme","selectedKeys","path","pathname","startsWith","getSelectedKeys","mode","items","padding","display","justifyContent","alignItems","boxShadow","selectable","border","Login","React","lazy","__vitePreload","import","__VITE_PRELOAD__","Dashboard","PluginsPage","RulesPage","SystemPage","AlertsPage","module","default","MonitoringPage","PageLoader","Spin","size","tip","App","useEffect","ConfigProvider","locale","zhCN","algorithm","defaultAlgorithm","Router","Suspense","fallback","Routes","Route","element","index","dayjs","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"ignoreList":[],"sources":["../../../src/store/authStore.ts","../../../src/components/router/ProtectedRoute.tsx","../../../src/services/api.ts","../../../src/services/authService.ts","../../../src/components/layout/MainLayout.tsx","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist, createJSONStorage } from 'zustand/middleware';\r\nimport { StateCreator } from 'zustand';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  role: string;\r\n  email?: string;\r\n  createdAt?: string;\r\n}\r\n\r\ninterface AuthState {\r\n  accessToken: string | null;\r\n  refreshToken: string | null;\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  setTokens: (accessToken: string, refreshToken: string) => void;\r\n  setUser: (user: User | null) => void;\r\n  logout: () => void;\r\n  initialize: () => void;\r\n}\r\n\r\nconst authStoreCreator: StateCreator<AuthState, [], [['zustand/persist', AuthState]]> = (set, get) => ({\r\n  accessToken: null,\r\n  refreshToken: null,\r\n  user: null,\r\n  isAuthenticated: false,\r\n  setTokens: (accessToken, refreshToken) => {\r\n    set({ accessToken, refreshToken, isAuthenticated: !!accessToken });\r\n  },\r\n  setUser: (user) => set({ user }),\r\n  logout: () => {\r\n    set({ accessToken: null, refreshToken: null, user: null, isAuthenticated: false });\r\n  },\r\n  initialize: () => {\r\n    const { accessToken, refreshToken } = get();\r\n    if (accessToken && refreshToken) {\r\n      set({ isAuthenticated: true });\r\n    } else {\r\n      set({ isAuthenticated: false });\r\n    }\r\n  },\r\n});\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    authStoreCreator,\r\n    {\r\n      name: 'auth-storage', // unique name\r\n      storage: createJSONStorage(() => localStorage),\r\n    }\r\n  )\r\n); ","import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuthStore } from '../../store/authStore';\r\n\r\ninterface ProtectedRouteProps {\r\n  children?: React.ReactElement;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { isAuthenticated } = useAuthStore();\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute; ","import axios, { AxiosError, InternalAxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { useAuthStore } from '../store/authStore';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api/v1',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add the auth token to headers\r\napi.interceptors.request.use(\r\n  (config: InternalAxiosRequestConfig) => {\r\n    const { accessToken } = useAuthStore.getState();\r\n    console.log('发送API请求:', config.url);\r\n    console.log('当前accessToken:', accessToken ? `${accessToken.substring(0, 20)}...` : 'null');\r\n    \r\n    if (accessToken) {\r\n      config.headers.Authorization = `Bearer ${accessToken}`;\r\n      console.log('已添加Authorization header');\r\n    } else {\r\n      console.log('没有accessToken，未添加Authorization header');\r\n    }\r\n    return config;\r\n  },\r\n  (error: AxiosError) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token refresh\r\nlet isRefreshing = false;\r\nlet failedQueue: { resolve: (value: unknown) => void; reject: (reason?: Error) => void; }[] = [];\r\n\r\nconst processQueue = (error: Error | null, token: string | null = null) => {\r\n  failedQueue.forEach(prom => {\r\n    if (error) {\r\n      prom.reject(error);\r\n    } else {\r\n      prom.resolve(token);\r\n    }\r\n  });\r\n  \r\n  failedQueue = [];\r\n};\r\n\r\napi.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    return response;\r\n  },\r\n  async (error: AxiosError) => {\r\n    const originalRequest = error.config as InternalAxiosRequestConfig & { _retry?: boolean };\r\n\r\n    if (!originalRequest) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      if (isRefreshing) {\r\n        return new Promise(function(resolve, reject) {\r\n          failedQueue.push({ resolve, reject });\r\n        }).then(token => {\r\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\r\n          return axios(originalRequest);\r\n        }).catch(err => {\r\n          return Promise.reject(err);\r\n        })\r\n      }\r\n\r\n      originalRequest._retry = true;\r\n      isRefreshing = true;\r\n\r\n      const { refreshToken, logout, setTokens } = useAuthStore.getState();\r\n      if (!refreshToken) {\r\n        logout();\r\n        isRefreshing = false;\r\n        // Optionally redirect to login page\r\n        // window.location.href = '/login';\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      try {\r\n        const { data } = await axios.post('/api/v1/auth/refresh', { refreshToken });\r\n        const { accessToken: newAccessToken, refreshToken: newRefreshToken } = data;\r\n        \r\n        setTokens(newAccessToken, newRefreshToken);\r\n        if (api.defaults.headers.common)\r\n            api.defaults.headers.common['Authorization'] = 'Bearer ' + newAccessToken;\r\n        originalRequest.headers['Authorization'] = 'Bearer ' + newAccessToken;\r\n        \r\n        processQueue(null, newAccessToken);\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        const error = refreshError instanceof Error ? refreshError : new Error(String(refreshError));\r\n        processQueue(error, null);\r\n        logout();\r\n        // Optionally redirect to login page\r\n        // window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      } finally {\r\n        isRefreshing = false;\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; ","import api from './api';\r\nimport { useAuthStore } from '../store/authStore';\r\nimport { LoginCredentials, ChangePasswordPayload, UpdateProfilePayload } from '../types/auth';\r\n\r\nexport const authService = {\r\n  async login(credentials: LoginCredentials) {\r\n    const { setTokens, setUser } = useAuthStore.getState();\r\n    const response = await api.post('/auth/login', credentials);\r\n    const { token, refresh_token, user } = response.data.data;\r\n    setTokens(token, refresh_token);\r\n    setUser(user);\r\n    return response.data.data;\r\n  },\r\n\r\n  async logout() {\r\n    const { logout } = useAuthStore.getState();\r\n    try {\r\n      // The backend might not have a persistent session to invalidate,\r\n      // but it's good practice to call a logout endpoint if it exists.\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n      // Even if the backend call fails, we clear the frontend state.\r\n    } finally {\r\n      logout();\r\n    }\r\n  },\r\n\r\n  async getProfile() {\r\n    const { setUser } = useAuthStore.getState();\r\n    const response = await api.get('/auth/profile');\r\n    setUser(response.data.data || response.data);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  async updateProfile(payload: UpdateProfilePayload) {\r\n    const { setUser } = useAuthStore.getState();\r\n    const response = await api.put('/auth/profile', payload);\r\n    setUser(response.data.data || response.data);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  async changePassword(payload: ChangePasswordPayload) {\r\n    return await api.put('/auth/password', payload);\r\n  },\r\n\r\n  // This might not be needed if the interceptor handles it fully,\r\n  // but can be useful for manual refresh logic.\r\n  async refreshToken() {\r\n    const { refreshToken, setTokens } = useAuthStore.getState();\r\n    if (!refreshToken) {\r\n      throw new Error('No refresh token available.');\r\n    }\r\n    const response = await api.post('/auth/refresh', { refreshToken });\r\n    const { token: newAccessToken, refresh_token: newRefreshToken } = response.data.data || response.data;\r\n    setTokens(newAccessToken, newRefreshToken);\r\n    return newAccessToken;\r\n  },\r\n}; ","import React, { useState } from 'react';\r\nimport { Layout, Menu, type MenuProps } from 'antd';\r\nimport { Outlet, Link, useLocation } from 'react-router-dom';\r\nimport {\r\n  DashboardOutlined,\r\n  DeploymentUnitOutlined,\r\n  ApartmentOutlined,\r\n  AlertOutlined,\r\n  MonitorOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport { authService } from '../../services/authService';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\ntype MenuItem = Required<MenuProps>['items'][number];\r\n\r\nconst MainLayout: React.FC = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const location = useLocation();\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    // The protected route will handle the redirect\r\n  };\r\n\r\n  // 根据当前路径获取选中的菜单项\r\n  const getSelectedKeys = () => {\r\n    const path = location.pathname;\r\n    if (path === '/' || path.startsWith('/dashboard')) return ['1'];\r\n    if (path.startsWith('/plugins')) return ['2'];\r\n    if (path.startsWith('/rules')) return ['3'];\r\n    if (path.startsWith('/alerts')) return ['4'];\r\n    if (path.startsWith('/monitoring')) return ['5'];\r\n    if (path.startsWith('/system')) return ['6'];\r\n    return ['1'];\r\n  };\r\n\r\n  // 侧边栏菜单项\r\n  const sideMenuItems: MenuItem[] = [\r\n    {\r\n      key: '1',\r\n      icon: <DashboardOutlined />,\r\n      label: <Link to=\"/\">仪表盘</Link>,\r\n    },\r\n    {\r\n      key: '2',\r\n      icon: <DeploymentUnitOutlined />,\r\n      label: <Link to=\"/plugins\">插件管理</Link>,\r\n    },\r\n    {\r\n      key: '3',\r\n      icon: <ApartmentOutlined />,\r\n      label: <Link to=\"/rules\">规则管理</Link>,\r\n    },\r\n    {\r\n      key: '4',\r\n      icon: <AlertOutlined />,\r\n      label: <Link to=\"/alerts\">告警管理</Link>,\r\n    },\r\n    {\r\n      key: '5',\r\n      icon: <MonitorOutlined />,\r\n      label: <Link to=\"/monitoring\">连接监控</Link>,\r\n    },\r\n    {\r\n      key: '6',\r\n      icon: <SettingOutlined />,\r\n      label: <Link to=\"/system\">系统设置</Link>,\r\n    },\r\n  ];\r\n\r\n  // 顶部菜单项\r\n  const topMenuItems: MenuItem[] = [\r\n    {\r\n      key: 'logout',\r\n      icon: <LogoutOutlined />,\r\n      label: '退出登录',\r\n      onClick: handleLogout,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider \r\n        collapsible \r\n        collapsed={collapsed} \r\n        onCollapse={setCollapsed}\r\n        width={256}\r\n      >\r\n        <div \r\n          className=\"logo\" \r\n          style={{ \r\n            height: '32px', \r\n            margin: '16px', \r\n            background: 'rgba(255, 255, 255, 0.2)',\r\n            borderRadius: '4px'\r\n          }} \r\n        />\r\n        <Menu \r\n          theme=\"dark\" \r\n          selectedKeys={getSelectedKeys()}\r\n          mode=\"inline\"\r\n          items={sideMenuItems}\r\n        />\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header \r\n          className=\"site-layout-background\" \r\n          style={{ \r\n            padding: '0 16px', \r\n            background: '#fff', \r\n            display: 'flex', \r\n            justifyContent: 'flex-end', \r\n            alignItems: 'center',\r\n            boxShadow: '0 1px 4px rgba(0,21,41,0.08)'\r\n          }}\r\n        >\r\n          <Menu \r\n            mode=\"horizontal\" \r\n            selectable={false}\r\n            items={topMenuItems}\r\n            style={{ border: 'none' }}\r\n          />\r\n        </Header>\r\n        <Content style={{ margin: '16px' }}>\r\n          <div \r\n            className=\"site-layout-background\" \r\n            style={{ \r\n              padding: 24, \r\n              minHeight: 360, \r\n              background: '#fff',\r\n              borderRadius: '6px',\r\n              boxShadow: '0 1px 2px rgba(0,21,41,0.08)'\r\n            }}\r\n          >\r\n            <Outlet />\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainLayout; ","import React, { useEffect, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ConfigProvider, theme, Spin } from 'antd';\r\nimport zhCN from 'antd/locale/zh_CN';\r\nimport { useAuthStore } from './store/authStore';\r\nimport ProtectedRoute from './components/router/ProtectedRoute';\r\nimport MainLayout from './components/layout/MainLayout';\r\n\r\n// 使用React.lazy进行路由级别的代码分割\r\nconst Login = React.lazy(() => import('./pages/Login'));\r\nconst Dashboard = React.lazy(() => import('./pages/Dashboard'));\r\nconst PluginsPage = React.lazy(() => import('./pages/PluginsPage'));\r\nconst RulesPage = React.lazy(() => import('./pages/RulesPage'));\r\nconst SystemPage = React.lazy(() => import('./pages/SystemPage'));\r\nconst AlertsPage = React.lazy(() => import('./pages/AlertsPage').then(module => ({ default: module.AlertsPage })));\r\nconst MonitoringPage = React.lazy(() => import('./pages/MonitoringPage'));\r\n\r\nimport './App.css';\r\n\r\n// 全局加载组件\r\nconst PageLoader = () => (\r\n  <div style={{ \r\n    display: 'flex', \r\n    justifyContent: 'center', \r\n    alignItems: 'center', \r\n    height: '200px' \r\n  }}>\r\n    <Spin size=\"large\" tip=\"页面加载中...\" />\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  const { initialize } = useAuthStore();\r\n\r\n  useEffect(() => {\r\n    initialize();\r\n  }, [initialize]);\r\n\r\n  return (\r\n    <ConfigProvider \r\n      locale={zhCN}\r\n      theme={{\r\n        algorithm: theme.defaultAlgorithm,\r\n      }}\r\n    >\r\n      <Router>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Routes>\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route \r\n              path=\"/*\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <MainLayout />\r\n                </ProtectedRoute>\r\n              }\r\n            >\r\n                <Route index element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <Dashboard />\r\n                  </Suspense>\r\n                } />\r\n                <Route path=\"plugins\" element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <PluginsPage />\r\n                  </Suspense>\r\n                } />\r\n                <Route path=\"rules\" element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <RulesPage />\r\n                  </Suspense>\r\n                } />\r\n                <Route path=\"alerts\" element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <AlertsPage />\r\n                  </Suspense>\r\n                } />\r\n                <Route path=\"monitoring\" element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <MonitoringPage />\r\n                  </Suspense>\r\n                } />\r\n                <Route path=\"system\" element={\r\n                  <Suspense fallback={<PageLoader />}>\r\n                    <SystemPage />\r\n                  </Suspense>\r\n                } />\r\n            </Route>\r\n          </Routes>\r\n        </Suspense>\r\n      </Router>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App; ","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { ConfigProvider } from 'antd'\r\nimport zhCN from 'antd/locale/zh_CN'\r\nimport dayjs from 'dayjs'\r\nimport 'dayjs/locale/zh-cn'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\n// 设置 dayjs 中文语言\r\ndayjs.locale('zh-cn')\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <ConfigProvider locale={zhCN}>\r\n      <App />\r\n    </ConfigProvider>\r\n  </React.StrictMode>,\r\n) "],"file":"assets/js/index-SZKmSCox.js"}