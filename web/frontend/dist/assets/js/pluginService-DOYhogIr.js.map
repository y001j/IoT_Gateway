{"version":3,"file":"pluginService-DOYhogIr.js","sources":["../../../src/services/pluginService.ts"],"sourcesContent":["import api from './api';\r\nimport type {\r\n  Plugin,\r\n  PluginListRequest,\r\n  PluginListResponse,\r\n  PluginConfigValidationResponse,\r\n  PluginOperationResponse,\r\n  PluginStats,\r\n  PluginLog,\r\n  PluginLogRequest,\r\n  PluginAction\r\n} from '../types/plugin';\r\n\r\nexport const pluginService = {\r\n  // 获取插件列表\r\n  async getPlugins(params: PluginListRequest): Promise<PluginListResponse> {\r\n    const response = await api.get('/plugins', { params });\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 获取单个插件详情\r\n  async getPlugin(name: string): Promise<Plugin> {\r\n    const response = await api.get(`/plugins/${name}`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 启动插件\r\n  async startPlugin(name: string): Promise<PluginOperationResponse> {\r\n    const response = await api.post(`/plugins/${name}/start`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 停止插件\r\n  async stopPlugin(name: string): Promise<PluginOperationResponse> {\r\n    const response = await api.post(`/plugins/${name}/stop`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 重启插件\r\n  async restartPlugin(name: string): Promise<PluginOperationResponse> {\r\n    const response = await api.post(`/plugins/${name}/restart`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 删除插件\r\n  async deletePlugin(name: string): Promise<void> {\r\n    await api.delete(`/plugins/${name}`);\r\n  },\r\n\r\n  // 获取插件配置\r\n  async getPluginConfig(name: string): Promise<Record<string, any>> {\r\n    const response = await api.get(`/plugins/${name}/config`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 更新插件配置\r\n  async updatePluginConfig(name: string, config: Record<string, any>): Promise<void> {\r\n    await api.put(`/plugins/${name}/config`, { config });\r\n  },\r\n\r\n  // 验证插件配置\r\n  async validatePluginConfig(name: string, config: Record<string, any>): Promise<PluginConfigValidationResponse> {\r\n    const response = await api.post(`/plugins/${name}/config/validate`, { config });\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 获取插件日志\r\n  async getPluginLogs(name: string, params: PluginLogRequest): Promise<{ data: PluginLog[]; total: number }> {\r\n    const response = await api.get(`/plugins/${name}/logs`, { params });\r\n    const result = response.data.data || response.data;\r\n    return {\r\n      data: result.data || result,\r\n      total: result.pagination?.total || result.length || 0\r\n    };\r\n  },\r\n\r\n  // 获取插件统计\r\n  async getPluginStats(name: string): Promise<PluginStats> {\r\n    const response = await api.get(`/plugins/${name}/stats`);\r\n    return response.data.data || response.data;\r\n  },\r\n\r\n  // 执行插件操作（通用方法）\r\n  async executePluginAction(name: string, action: PluginAction): Promise<PluginOperationResponse> {\r\n    switch (action) {\r\n      case 'start':\r\n        return this.startPlugin(name);\r\n      case 'stop':\r\n        return this.stopPlugin(name);\r\n      case 'restart':\r\n        return this.restartPlugin(name);\r\n      default:\r\n        throw new Error(`Unknown action: ${action}`);\r\n    }\r\n  }\r\n}; "],"names":["pluginService","getPlugins","params","response","api","get","data","getPlugin","name","startPlugin","post","stopPlugin","restartPlugin","deletePlugin","delete","getPluginConfig","updatePluginConfig","config","put","validatePluginConfig","getPluginLogs","result","total","pagination","length","getPluginStats","executePluginAction","action","this","Error"],"mappings":"wCAaO,MAAMA,EAAgB,CAE3B,gBAAMC,CAAWC,GACf,MAAMC,QAAiBC,EAAIC,IAAI,WAAY,CAAEH,WAC7C,OAAOC,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,eAAMC,CAAUC,GACd,MAAML,QAAiBC,EAAIC,IAAI,YAAYG,KAC3C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,iBAAMG,CAAYD,GAChB,MAAML,QAAiBC,EAAIM,KAAK,YAAYF,WAC5C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,gBAAMK,CAAWH,GACf,MAAML,QAAiBC,EAAIM,KAAK,YAAYF,UAC5C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,mBAAMM,CAAcJ,GAClB,MAAML,QAAiBC,EAAIM,KAAK,YAAYF,aAC5C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,kBAAMO,CAAaL,SACXJ,EAAIU,OAAO,YAAYN,IAC/B,EAGA,qBAAMO,CAAgBP,GACpB,MAAML,QAAiBC,EAAIC,IAAI,YAAYG,YAC3C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,wBAAMU,CAAmBR,EAAcS,SAC/Bb,EAAIc,IAAI,YAAYV,WAAe,CAAES,UAC7C,EAGA,0BAAME,CAAqBX,EAAcS,GACvC,MAAMd,QAAiBC,EAAIM,KAAK,YAAYF,oBAAwB,CAAES,WACtE,OAAOd,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,mBAAMc,CAAcZ,EAAcN,GAChC,MAAMC,QAAiBC,EAAIC,IAAI,YAAYG,SAAa,CAAEN,WACpDmB,EAASlB,EAASG,KAAKA,MAAQH,EAASG,KAC9C,MAAO,CACLA,KAAMe,EAAOf,MAAQe,EACrBC,MAAOD,EAAOE,YAAYD,OAASD,EAAOG,QAAU,EAExD,EAGA,oBAAMC,CAAejB,GACnB,MAAML,QAAiBC,EAAIC,IAAI,YAAYG,WAC3C,OAAOL,EAASG,KAAKA,MAAQH,EAASG,IACxC,EAGA,yBAAMoB,CAAoBlB,EAAcmB,GACtC,OAAQA,GACN,IAAK,QACH,OAAOC,KAAKnB,YAAYD,GAC1B,IAAK,OACH,OAAOoB,KAAKjB,WAAWH,GACzB,IAAK,UACH,OAAOoB,KAAKhB,cAAcJ,GAC5B,QACE,MAAM,IAAIqB,MAAM,mBAAmBF,KAEzC"}