{"version":3,"file":"Login-BORNirjJ.js","sources":["../../../src/pages/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, Card, Typography, Alert } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authService } from '../services/authService';\r\nimport { useAuthStore } from '../store/authStore';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n  const { setTokens, setUser, isAuthenticated } = useAuthStore();\r\n\r\n  const onFinish = async (values: any) => {\r\n    console.log('开始登录，用户名:', values.username);\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    \r\n    try {\r\n      console.log('发送登录请求...');\r\n      const data = await authService.login(values);\r\n      console.log('登录请求成功，收到数据:', data);\r\n      \r\n      setTokens(data.token, data.refresh_token);\r\n      setUser(data.user);\r\n      \r\n      console.log('设置token和用户信息完成');\r\n      console.log('当前认证状态:', useAuthStore.getState().isAuthenticated);\r\n      \r\n      setSuccess('登录成功！正在跳转...');\r\n      \r\n      // 短暂延迟以显示成功消息\r\n      setTimeout(() => {\r\n        console.log('准备跳转到首页...');\r\n        navigate('/', { replace: true });\r\n      }, 1000);\r\n      \r\n    } catch (err: any) {\r\n      console.error('登录失败:', err);\r\n      console.error('错误详情:', err.response?.data);\r\n      setError(err.response?.data?.message || err.message || '登录失败，请检查您的用户名和密码。');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 如果已经认证，直接跳转\r\n  React.useEffect(() => {\r\n    if (isAuthenticated) {\r\n      console.log('用户已认证，跳转到首页');\r\n      navigate('/', { replace: true });\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', background: '#f0f2f5' }}>\r\n      <Card style={{ width: 400 }}>\r\n        <div style={{ textAlign: 'center', marginBottom: '24px' }}>\r\n          <Title level={2}>IoT Gateway 登录</Title>\r\n        </div>\r\n        {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: 24 }} />}\r\n        {success && <Alert message={success} type=\"success\" showIcon style={{ marginBottom: 24 }} />}\r\n        <Form\r\n          name=\"login\"\r\n          initialValues={{ username: 'admin', password: 'admin123' }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: '请输入用户名!' }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"用户名\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: '请输入密码!' }]}\r\n          >\r\n            <Input.Password prefix={<LockOutlined />} placeholder=\"密码\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ width: '100%' }}>\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"names":["Title","Typography","Login","loading","setLoading","useState","error","setError","success","setSuccess","navigate","useNavigate","setTokens","setUser","isAuthenticated","useAuthStore","React","useEffect","console","log","replace","jsx","style","display","justifyContent","alignItems","height","background","children","jsxs","Card","width","textAlign","marginBottom","level","Alert","message","type","showIcon","Form","name","initialValues","username","password","onFinish","async","values","data","authService","login","token","refresh_token","user","getState","setTimeout","err","response","Item","rules","required","Input","prefix","UserOutlined","placeholder","Password","LockOutlined","Button","htmlType"],"mappings":"wcAOA,MAAMA,MAAEA,GAAUC,EAEZC,EAAkB,KACtB,MAAOC,EAASC,GAAcC,EAAAA,UAAS,IAChCC,EAAOC,GAAYF,EAAAA,SAAwB,OAC3CG,EAASC,GAAcJ,EAAAA,SAAwB,MAChDK,EAAWC,KACXC,UAAEA,EAAAC,QAAWA,EAAAC,gBAASA,GAAoBC,IA4ChD,OAPAC,EAAMC,UAAU,KACVH,IACFI,QAAQC,IAAI,eACZT,EAAS,IAAK,CAAEU,SAAS,MAE1B,CAACN,EAAiBJ,IAGnBW,MAAC,OAAIC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,QAASC,WAAY,WAC1GC,SAAAC,OAACC,GAAKR,MAAO,CAAES,MAAO,KACpBH,SAAA,CAAAP,EAAAA,IAAC,MAAA,CAAIC,MAAO,CAAEU,UAAW,SAAUC,aAAc,QAC/CL,SAAAP,EAAAA,IAACrB,EAAA,CAAMkC,MAAO,EAAGN,8BAElBtB,GAASe,EAAAA,IAACc,EAAA,CAAMC,QAAS9B,EAAO+B,KAAK,QAAQC,UAAQ,EAAChB,MAAO,CAAEW,aAAc,MAC7EzB,GAAWa,EAAAA,IAACc,EAAA,CAAMC,QAAS5B,EAAS6B,KAAK,UAAUC,UAAQ,EAAChB,MAAO,CAAEW,aAAc,MACpFJ,EAAAA,KAACU,EAAA,CACCC,KAAK,QACLC,cAAe,CAAEC,SAAU,QAASC,SAAU,YAC9CC,SArDSC,MAAOC,IACtB5B,QAAQC,IAAI,YAAa2B,EAAOJ,UAChCtC,GAAW,GACXG,EAAS,MACTE,EAAW,MAEX,IACES,QAAQC,IAAI,aACZ,MAAM4B,QAAaC,EAAYC,MAAMH,GACrC5B,QAAQC,IAAI,eAAgB4B,GAE5BnC,EAAUmC,EAAKG,MAAOH,EAAKI,eAC3BtC,EAAQkC,EAAKK,MAEblC,QAAQC,IAAI,kBACZD,QAAQC,IAAI,UAAWJ,EAAasC,WAAWvC,iBAE/CL,EAAW,gBAGX6C,WAAW,KACTpC,QAAQC,IAAI,cACZT,EAAS,IAAK,CAAEU,SAAS,KACxB,IAEL,OAASmC,GACPrC,QAAQZ,MAAM,QAASiD,GACvBrC,QAAQZ,MAAM,QAASiD,EAAIC,UAAUT,MACrCxC,EAASgD,EAAIC,UAAUT,MAAMX,SAAWmB,EAAInB,SAAW,oBACzD,CAAA,QACEhC,GAAW,EACb,GAwBMwB,SAAA,CAAAP,EAAAA,IAACkB,EAAKkB,KAAL,CACCjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMvB,QAAS,YAEnCR,eAACgC,EAAA,CAAMC,aAASC,EAAA,CAAA,GAAiBC,YAAY,UAE/C1C,EAAAA,IAACkB,EAAKkB,KAAL,CACCjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMvB,QAAS,WAEnCR,SAAAP,EAAAA,IAACuC,EAAMI,SAAN,CAAeH,OAAQxC,EAAAA,IAAC4C,EAAA,CAAA,GAAiBF,YAAY,eAEvDxB,EAAKkB,KAAL,CACC7B,SAAAP,EAAAA,IAAC6C,GAAO7B,KAAK,UAAU8B,SAAS,SAAShE,UAAkBmB,MAAO,CAAES,MAAO,QAAUH"}