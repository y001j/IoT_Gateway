[
  {
    "id": "test_expression_engine",
    "name": "测试表达式引擎",
    "description": "使用新的表达式引擎进行复杂条件评估",
    "enabled": true,
    "priority": 500,
    "version": 1,
    "conditions": {
      "type": "expression",
      "expression": "value > 25 && sqrt(value) < 10 && contains(device_id, 'sensor')"
    },
    "actions": [
      {
        "type": "transform",
        "config": {
          "type": "expression",
          "expression": "value * 1.8 + 32",
          "field": "value",
          "add_tags": {
            "converted": "celsius_to_fahrenheit",
            "processed_by": "expression_engine"
          }
        }
      }
    ],
    "tags": {
      "category": "testing",
      "feature": "expression_engine"
    }
  },
  {
    "id": "test_incremental_aggregation",
    "name": "测试增量聚合",
    "description": "使用优化的增量统计进行高性能聚合",
    "enabled": true,
    "priority": 400,
    "version": 1,
    "conditions": {
      "type": "simple",
      "field": "key",
      "operator": "eq",
      "value": "temperature"
    },
    "actions": [
      {
        "type": "aggregate",
        "config": {
          "window_size": 10,
          "functions": ["avg", "max", "min", "stddev", "count"],
          "group_by": ["device_id"],
          "output": {
            "key_template": "{{.key}}_optimized_stats",
            "forward": true
          },
          "ttl": "5m"
        },
        "async": true
      }
    ],
    "tags": {
      "category": "testing", 
      "feature": "incremental_aggregation",
      "performance": "optimized"
    }
  },
  {
    "id": "test_parallel_processing",
    "name": "测试并行处理",
    "description": "验证工作池并行处理能力",
    "enabled": true,
    "priority": 300,
    "version": 1,
    "conditions": {
      "and": [
        {
          "field": "key",
          "operator": "contains",
          "value": "sensor"
        },
        {
          "type": "expression",
          "expression": "value > 0"
        }
      ]
    },
    "actions": [
      {
        "type": "transform",
        "config": {
          "type": "scale",
          "factor": 2.0,
          "field": "value"
        },
        "async": true
      },
      {
        "type": "alert",
        "config": {
          "level": "info",
          "message": "并行处理测试: 设备 {{.device_id}} 数据 {{.key}}={{.value}}",
          "channels": [
            {
              "type": "console"
            }
          ]
        },
        "async": true
      }
    ],
    "tags": {
      "category": "testing",
      "feature": "parallel_processing"
    }
  },
  {
    "id": "test_monitoring_integration",
    "name": "测试监控集成",
    "description": "验证监控系统的错误追踪和性能统计",
    "enabled": true,
    "priority": 200,
    "version": 1,
    "conditions": {
      "type": "expression",
      "expression": "value < 0 || value > 100"
    },
    "actions": [
      {
        "type": "alert",
        "config": {
          "level": "warning",
          "message": "监控测试: 异常值检测 {{.device_id}} {{.key}}={{.value}}",
          "channels": [
            {
              "type": "console"
            }
          ],
          "throttle": {
            "window": "1m",
            "max_count": 5
          }
        }
      },
      {
        "type": "filter",
        "config": {
          "type": "range",
          "min": 0,
          "max": 100,
          "drop_on_match": false
        }
      }
    ],
    "tags": {
      "category": "testing",
      "feature": "monitoring"
    }
  },
  {
    "id": "test_complex_conditions",
    "name": "测试复杂条件",
    "description": "验证嵌套条件和表达式的组合使用",
    "enabled": true,
    "priority": 350,
    "version": 1,
    "conditions": {
      "or": [
        {
          "and": [
            {
              "field": "device_id",
              "operator": "startswith",
              "value": "sensor_"
            },
            {
              "type": "expression",
              "expression": "value > avg_threshold * 1.2"
            }
          ]
        },
        {
          "type": "expression",
          "expression": "time_range(22, 6) && value > emergency_threshold"
        }
      ]
    },
    "actions": [
      {
        "type": "aggregate",
        "config": {
          "window_size": 5,
          "functions": ["avg", "count"],
          "group_by": ["device_id", "key"],
          "ttl": "2m"
        }
      },
      {
        "type": "forward",
        "config": {
          "targets": [
            {
              "type": "nats",
              "subject": "iot.alerts.{{.key}}"
            }
          ],
          "template": {
            "alert_type": "complex_condition",
            "device": "{{.device_id}}",
            "metric": "{{.key}}",
            "value": "{{.value}}",
            "timestamp": "{{.timestamp}}"
          }
        }
      }
    ],
    "tags": {
      "category": "testing",
      "feature": "complex_conditions",
      "complexity": "high"
    }
  },
  {
    "id": "test_performance_stress",
    "name": "性能压力测试规则",
    "description": "用于性能基准测试的高频率规则",
    "enabled": true,
    "priority": 100,
    "version": 1,
    "conditions": {
      "type": "expression",
      "expression": "len(device_id) > 0"
    },
    "actions": [
      {
        "type": "aggregate",
        "config": {
          "window_size": 100,
          "functions": ["avg", "sum", "count", "min", "max"],
          "group_by": ["device_id"],
          "output": {
            "key_template": "{{.key}}_perf_stats",
            "forward": false
          },
          "ttl": "30s"
        },
        "async": true
      }
    ],
    "tags": {
      "category": "testing",
      "feature": "performance",
      "load_test": "true"
    }
  }
]